generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Applicant {
  id               String  @id
  userId           String?
  jobId            String?
  previousJobTitle String
  phone            String
  linkedin         String
  portofolio       String
  coverLetter      String
  resume           String
  Job              Job?    @relation(fields: [jobId], references: [id])
  User             User?   @relation(fields: [userId], references: [id])
}

model CategoryJob {
  id   String @id
  name String
  Job  Job[]
}

model Company {
  id                 String               @id
  name               String
  password           String
  email              String               @unique
  CompanySocialMedia CompanySocialMedia[]
  CompanyTeam        CompanyTeam[]
  Job                Job[]
  companyOverview    companyOverview[]
}

model CompanySocialMedia {
  id        String   @id
  instagram String
  twitter   String
  facebook  String
  linkedin  String
  youtube   String
  companyId String?
  Company   Company? @relation(fields: [companyId], references: [id])
}

model CompanyTeam {
  id        String   @id
  name      String
  position  String
  instagram String
  linkedin  String
  companyId String?
  Company   Company? @relation(fields: [companyId], references: [id])
}

model Industry {
  id   String @id
  name String
}

model Job {
  id             String       @id
  roles          String
  datePosted     DateTime     @default(now())
  dueDate        DateTime
  jobType        String
  applicants     Int
  needs          Int
  salaryFrom     String
  salaryTo       String
  requiredSkills String[]
  descriprion    String
  responsibility String
  whoYouAre      String
  niceToHaves    String
  benefits       Json
  companayId     String?
  categoryId     String?
  Applicant      Applicant[]
  CategoryJob    CategoryJob? @relation(fields: [categoryId], references: [id])
  Company        Company?     @relation(fields: [companayId], references: [id])
}

model User {
  id        String      @id @default(cuid())
  name      String
  password  String
  email     String      @unique
  Applicant Applicant[]
}

model companyOverview {
  id          String   @id
  image       String
  website     String
  name        String
  location    String
  employee    String
  industry    String
  dateFounded DateTime
  techStack   String[]
  description String
  companyId   String?
  Company     Company? @relation(fields: [companyId], references: [id])
}
